/**
* @returns {PieceHasher}
*/
export function create(): PieceHasher;
/**
*/
export class PieceHasher {
    static __wrap(ptr: any): any;
    __destroy_into_raw(): number | undefined;
    __wbg_ptr: number | undefined;
    free(): void;
    /**
    * @returns {bigint}
    */
    count(): bigint;
    /**
    * Resets the hasher state
    */
    reset(): void;
    /**
    * @param {Uint8Array} bytes
    */
    write(bytes: Uint8Array): void;
    /**
    * @param {Uint8Array} target
    * @param {number | undefined} offset
    * @param {boolean | undefined} use_prefix
    * @returns {number}
    */
    digestInto(target: Uint8Array, offset: number | undefined, use_prefix: boolean | undefined): number;
    /**
    * @returns {number}
    */
    digestByteLength(): number;
    /**
    * @returns {number}
    */
    multihashByteLength(): number;
}
export default __wbg_init;
export function initSync(module: any): any;
export function __wbg_init(input: any): Promise<any>;
//# sourceMappingURL=wasm.d.ts.map